/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.blankedv.javapanel;

import static de.blankedv.javapanel.Defines.*;
import static de.blankedv.javapanel.JavaPanel.frame;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author mblank
 */
public class SettingsUI extends javax.swing.JFrame {

    private String pName = "?";

    /**
     * Creates new form SettingsUI
     */
    public SettingsUI(String pName) {
        this.pName = pName;

        initComponents();

        initValues();  // read initial values from prefs

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        comboScale = new javax.swing.JComboBox<>();
        lblScale = new javax.swing.JLabel();
        cbShowAddresses = new javax.swing.JCheckBox();
        cbStartOfDay = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        lblConfigFileName = new javax.swing.JLabel();
        cbSimulation = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        cbRoutesEnabled = new javax.swing.JCheckBox();
        cbAutoClearTime = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        comboStyle = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        comboAutoConfig = new javax.swing.JComboBox<>();
        cbRecalcTurnouts = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Settings");

        btnCancel.setText("Zurück");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSave.setText("Speichern");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        comboScale.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Automatisch", "1", "1.5", "2", "3", "4" }));
        comboScale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboScaleActionPerformed(evt);
            }
        });

        lblScale.setText("Skalieren");

        cbShowAddresses.setText("Alle Adressen anzeigen");
        cbShowAddresses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbShowAddressesActionPerformed(evt);
            }
        });

        cbStartOfDay.setText("Beim Start zurücksetzen");
        cbStartOfDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStartOfDayActionPerformed(evt);
            }
        });

        jLabel1.setText("Gleisplan automatisch?");

        lblConfigFileName.setText("?");

        cbSimulation.setText("nur Simulation");

        jButton1.setText("Anderer Gleisplan");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cbRoutesEnabled.setText("Fahrstraßensteuerung");

        cbAutoClearTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10s", "20s", "30s", "40s" }));
        cbAutoClearTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAutoClearTimeActionPerformed(evt);
            }
        });

        jLabel2.setText("Fahrstr. löschen nach");

        comboStyle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DE", "UK", "US" }));

        jLabel3.setText("Gleisplan Stil:");

        comboAutoConfig.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ja", "Nein" }));

        cbRecalcTurnouts.setText("Weichen berechnen");
        cbRecalcTurnouts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRecalcTurnoutsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblConfigFileName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(34, 34, 34)
                                .addComponent(comboAutoConfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(85, 85, 85)
                                .addComponent(cbSimulation)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(25, 25, 25))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbStartOfDay)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 143, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbShowAddresses)
                                    .addComponent(cbRecalcTurnouts))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbRoutesEnabled)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblScale)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboScale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(cbAutoClearTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(12, 12, 12))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboAutoConfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSimulation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblConfigFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(comboStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbStartOfDay, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbRoutesEnabled))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbAutoClearTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbShowAddresses))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblScale)
                    .addComponent(comboScale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbRecalcTurnouts))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnSave))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // settingsWindow = null;
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        prefs.putBoolean("showAddresses", cbShowAddresses.isSelected());
        prefs.putBoolean("startofday", cbStartOfDay.isSelected());
        prefs.putBoolean("simulation", cbSimulation.isSelected());
        prefs.putBoolean("routesEnabled", cbRoutesEnabled.isSelected());
        prefs.putBoolean("cbRecalcTurnouts", cbRecalcTurnouts.isSelected());
        prefs.put("scale", comboScale.getSelectedItem().toString());
        prefs.put("configfilename", lblConfigFileName.getText());
        prefs.put("autocleartime", cbAutoClearTime.getSelectedItem().toString());
        prefs.put("autoconfig", comboAutoConfig.getSelectedItem().toString());
        prefs.put("style", comboStyle.getSelectedItem().toString());
        style = comboStyle.getSelectedItem().toString();
        Defines.setStyle(style);

        if (DEBUG) {
            System.out.println("saving Settings");
            System.out.println("saving StartOfDay=" + cbStartOfDay.isSelected());
            System.out.println("saving Simulation=" + cbSimulation.isSelected());
            System.out.println("saving routesEnabled=" + cbRoutesEnabled.isSelected());
            System.out.println("saving recalcTurnouts=" + cbRecalcTurnouts.isSelected());
            System.out.println("showAddresses=" + cbShowAddresses.isSelected());
            System.out.println("autoconfig=" + comboAutoConfig.getSelectedItem().toString());
            System.out.println("configfilename=" + lblConfigFileName.getText());
            System.out.println("scale=" + comboScale.getSelectedItem().toString());
        }
        drawAddresses = prefs.getBoolean("showAddresses", false);
        drawAddresses2 = prefs.getBoolean("showAddresses", false);
        routesEnabled = prefs.getBoolean("routesEnabled", false);
        String ac = cbAutoClearTime.getSelectedItem().toString();
        autoClearTimeRoutes = Integer.parseInt(ac.substring(0, ac.length() - 1));

        JOptionPane.showMessageDialog(this, "Program needs Restart if settings have changed.");
        dispose();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void cbAutoClearTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAutoClearTimeActionPerformed
        String ac = cbAutoClearTime.getSelectedItem().toString();
        autoClearTimeRoutes = Integer.parseInt(ac.substring(0, ac.length() - 1));
    }//GEN-LAST:event_cbAutoClearTimeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Create a file chooser
        final JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new FileNameExtensionFilter("Panel XML Files", "xml"));
        int returnVal = fc.showOpenDialog(frame);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            lblConfigFileName.setText(file.getAbsolutePath());

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbStartOfDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStartOfDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbStartOfDayActionPerformed

    private void comboScaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboScaleActionPerformed
        prefs.put("scale", comboScale.getSelectedItem().toString());
    }//GEN-LAST:event_comboScaleActionPerformed

    private void cbShowAddressesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbShowAddressesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbShowAddressesActionPerformed

    private void cbRecalcTurnoutsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRecalcTurnoutsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbRecalcTurnoutsActionPerformed

    private void initValues() {
        if (DEBUG) {
            System.out.println("init values of settings");
        }

        // read scaling
        String s = prefs.get("scale", "auto");
        comboScale.setSelectedItem(s);
        cbSimulation.setSelected(prefs.getBoolean("simulation", false));
        cbStartOfDay.setSelected(prefs.getBoolean("startOfDay", false));
        cbShowAddresses.setSelected(prefs.getBoolean("showAddresses", false));
        cbRoutesEnabled.setSelected(prefs.getBoolean("routesEnabled", false));
        cbRecalcTurnouts.setSelected(prefs.getBoolean("recalcturnouts", false));
        String acon = prefs.get("autoconfig", "Ja");
        comboAutoConfig.setSelectedItem(acon);  // Ja
        if (Utils.autoConfigEnabled()) {
            lblConfigFileName.setEnabled(false);
            jButton1.setEnabled(false);
        } else {
            lblConfigFileName.setEnabled(true);
            jButton1.setEnabled(true);
        }
        String ac = prefs.get("autocleartime", "30s");
        cbAutoClearTime.setSelectedItem(ac);
        lblConfigFileName.setText(prefs.get("configfilename", LOCAL_DIRECTORY + "/" + CONFIG_FILENAME));

        style = prefs.get("style", "DE");
        Defines.setStyle(style);
        comboStyle.setSelectedItem(style);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cbAutoClearTime;
    private javax.swing.JCheckBox cbRecalcTurnouts;
    private javax.swing.JCheckBox cbRoutesEnabled;
    private javax.swing.JCheckBox cbShowAddresses;
    private javax.swing.JCheckBox cbSimulation;
    private javax.swing.JCheckBox cbStartOfDay;
    private javax.swing.JComboBox<String> comboAutoConfig;
    private javax.swing.JComboBox<String> comboScale;
    private javax.swing.JComboBox<String> comboStyle;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblConfigFileName;
    private javax.swing.JLabel lblScale;
    // End of variables declaration//GEN-END:variables

}
